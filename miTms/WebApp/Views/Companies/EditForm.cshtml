﻿@model WebApp.Models.Company
 <!-- 输出form表单界面 -->
<fieldset>
    <div class="row">
        	    			<section class="col col-4">
           <label class="label">@Html.DisplayNameFor(model => model.Id) </label>
           <label class="input">
            <input id="@Html.IdFor(model => model.Id)" 
                   name="@Html.NameFor(model => model.Id)" 
                   placeholder="@Html.DisplayNameFor(model => model.Id)" 
                   value="@Html.ValueFor(model => model.Id)"
                   tabindex="0"   
                   type="text" 
                   />
                 <b class="tooltip tooltip-bottom-right">Id</b>
			    </label>
            </section>
              				 
	  
	    
	        			              <section class="col col-4">
            <label class="label">@Html.DisplayNameFor(model => model.Name) </label>
            <label class="input">
			<input id="@Html.IdFor(model => model.Name)" 
				   name="@Html.NameFor(model => model.Name)" 
                   placeholder="@Html.DisplayNameFor(model => model.Name)" 
				   value="@Html.ValueFor(model => model.Name)"
				   tabindex="1" 
				    type="text" 
				   />
             <b class="tooltip tooltip-bottom-right">名称</b>
			    </label>
            </section>
			  				 
	  
	    
	        			              <section class="col col-4">
            <label class="label">@Html.DisplayNameFor(model => model.Address) </label>
            <label class="input">
			<input id="@Html.IdFor(model => model.Address)" 
				   name="@Html.NameFor(model => model.Address)" 
                   placeholder="@Html.DisplayNameFor(model => model.Address)" 
				   value="@Html.ValueFor(model => model.Address)"
				   tabindex="2" 
				    type="text" 
				   />
             <b class="tooltip tooltip-bottom-right">地址</b>
			    </label>
            </section>
			  				 
	  
	    
	        			              <section class="col col-4">
            <label class="label">@Html.DisplayNameFor(model => model.City) </label>
            <label class="input">
			<input id="@Html.IdFor(model => model.City)" 
				   name="@Html.NameFor(model => model.City)" 
                   placeholder="@Html.DisplayNameFor(model => model.City)" 
				   value="@Html.ValueFor(model => model.City)"
				   tabindex="3" 
				    type="text" 
				   />
             <b class="tooltip tooltip-bottom-right">城市</b>
			    </label>
            </section>
			  				 
	  
	    
	        			              <section class="col col-4">
            <label class="label">@Html.DisplayNameFor(model => model.Province) </label>
            <label class="input">
			<input id="@Html.IdFor(model => model.Province)" 
				   name="@Html.NameFor(model => model.Province)" 
                   placeholder="@Html.DisplayNameFor(model => model.Province)" 
				   value="@Html.ValueFor(model => model.Province)"
				   tabindex="4" 
				    type="text" 
				   />
             <b class="tooltip tooltip-bottom-right">省份</b>
			    </label>
            </section>
			  				 
	  
	    
	        			              <section class="col col-4">
            <label class="label">@Html.DisplayNameFor(model => model.RegisterDate) </label>
            <label class="input">
            <i class="icon-append fa fa-calendar"></i>
			<input id="@Html.IdFor(model => model.RegisterDate)" 
			       name="@Html.NameFor(model => model.RegisterDate)" 
                   placeholder="@Html.DisplayNameFor(model => model.RegisterDate)" 
				   tabindex="5" 
				   class="datepicker" data-dateformat="dd/mm/yy"
				   type="text" 
				   value="@Html.ValueFor(model => model.RegisterDate)"
				    />
             <b class="tooltip tooltip-bottom-right">注册日期</b>
			    </label>
            </section>
			  				 
	  
	    
	        			  			<section class="col col-4">
            <label class="label">@Html.DisplayNameFor(model => model.Employees) </label>
            <label class="input">
            <input id="@Html.IdFor(model => model.Employees)"
				   name="@Html.NameFor(model => model.Employees)" 
                   placeholder="@Html.DisplayNameFor(model => model.Employees)" 
				   value="@Html.ValueFor(model => model.Employees)"
				   tabindex="6" 
				   type="text" 
				   />
                 <b class="tooltip tooltip-bottom-right">员工数</b>
			    </label>
            </section>
              				 
	  
	    
	        			              <section class="col col-4">
            <label class="label">@Html.DisplayNameFor(model => model.CreatedDate) </label>
            <label class="input">
            <i class="icon-append fa fa-calendar"></i>
			<input id="@Html.IdFor(model => model.CreatedDate)" 
			       name="@Html.NameFor(model => model.CreatedDate)" 
                   placeholder="@Html.DisplayNameFor(model => model.CreatedDate)" 
				   tabindex="7" 
				   class="datepicker" data-dateformat="dd/mm/yy"
				   type="text" 
				   value="@Html.ValueFor(model => model.CreatedDate)"
				    />
             <b class="tooltip tooltip-bottom-right">创建时间</b>
			    </label>
            </section>
			  				 
	  
	    
	        			              <section class="col col-4">
            <label class="label">@Html.DisplayNameFor(model => model.CreatedBy) </label>
            <label class="input">
			<input id="@Html.IdFor(model => model.CreatedBy)" 
				   name="@Html.NameFor(model => model.CreatedBy)" 
                   placeholder="@Html.DisplayNameFor(model => model.CreatedBy)" 
				   value="@Html.ValueFor(model => model.CreatedBy)"
				   tabindex="8" 
				    type="text" 
				   />
             <b class="tooltip tooltip-bottom-right">创建用户</b>
			    </label>
            </section>
			  				 
	  
	    
	        			              <section class="col col-4">
            <label class="label">@Html.DisplayNameFor(model => model.LastModifiedDate) </label>
            <label class="input">
            <i class="icon-append fa fa-calendar"></i>
			<input id="@Html.IdFor(model => model.LastModifiedDate)" 
			       name="@Html.NameFor(model => model.LastModifiedDate)" 
                   placeholder="@Html.DisplayNameFor(model => model.LastModifiedDate)" 
				   tabindex="9" 
				   class="datepicker" data-dateformat="dd/mm/yy"
				   type="text" 
				   value="@Html.ValueFor(model => model.LastModifiedDate)"
				    />
             <b class="tooltip tooltip-bottom-right">最后更新时间</b>
			    </label>
            </section>
			  				 
	  
	    
	        			              <section class="col col-4">
            <label class="label">@Html.DisplayNameFor(model => model.LastModifiedBy) </label>
            <label class="input">
			<input id="@Html.IdFor(model => model.LastModifiedBy)" 
				   name="@Html.NameFor(model => model.LastModifiedBy)" 
                   placeholder="@Html.DisplayNameFor(model => model.LastModifiedBy)" 
				   value="@Html.ValueFor(model => model.LastModifiedBy)"
				   tabindex="10" 
				    type="text" 
				   />
             <b class="tooltip tooltip-bottom-right">最后更新用户</b>
			    </label>
            </section>
			  				 
	  
	    
	    </div>
</fieldset>

<!--========================================================================================-->
 <fieldset>
    <div class="row">
        <section class="col col-md-12 col-lg-12">
    <!-- details tabs -->
    <div class="tabs-container">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs">
								<li class="active"><a data-toggle="tab" href="#tab-departments"> Departments</a></li>
												<li class=""><a data-toggle="tab" href="#tab-employees"> Employee</a></li>	 		 
				   
		 </ul>
		 <!-- Tab panes -->
         <div class="tab-content">
		 		  <div id="tab-departments" class="tab-pane active">
            <div class="panel-body">
                <div class="table-responsive">
				<table id="departments_datagrid" >
                </table>
				<div id="departments_toolbar" style="height:auto">
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-plus fa-fw',plain:true" onclick="departments_createitem()">新增</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-trash-o fa-fw',plain:true" onclick="departments_removeitem()">删除</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-floppy-o fa-fw',plain:true" onclick="departments_saveitem()">保存</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-undo fa-fw',plain:true" onclick="departments_reject()">取消</a>
                </div>
                </div>
            </div>
        </div>
		  		  <div id="tab-employees" class="tab-pane ">
            <div class="panel-body">
                <div class="table-responsive">
				<table id="employees_datagrid" >
                </table>
				<div id="employees_toolbar" style="height:auto">
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-plus fa-fw',plain:true" onclick="employee_createitem()">新增</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-trash-o fa-fw',plain:true" onclick="employee_removeitem()">删除</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-floppy-o fa-fw',plain:true" onclick="employee_saveitem()">保存</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-undo fa-fw',plain:true" onclick="employee_reject()">取消</a>
                </div>
                </div>
            </div>
        </div>
		  	</div>
	</div>
 
<!--end details tabs -->
        </section>
    </div>
</fieldset>



 <script type="text/javascript">
   var id=@Model.Id;
       $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        var target = $(e.target).attr("href") // activated tab
                if(target=="#tab-departments")
             $departmentsdg.datagrid("resize");
                if(target=="#tab-employees")
             $employeesdg.datagrid("resize");
            });
		 
								//--------------------------------------------------------------------
				// #departments_datagrid functions
				//--------------------------------------------------------------------
				var $departmentsdg = $("#departments_datagrid");

				var departments_editIndex = undefined;
		function departments_reload() {
				$departmentsdg.datagrid("reload");
			}
	function departments_endEditing() {
		if ( departments_editIndex == undefined) { return true }
		if ($departmentsdg.datagrid("validateRow", departments_editIndex)) {
						$departmentsdg.datagrid("endEdit", departments_editIndex);
			departments_editIndex = undefined;


			return true;
		} else {
			return false;
		}
	}
	function departments_onClickCell(index, field) {
		if (departments_editIndex != index) {
			if (departments_endEditing()) {
				$departmentsdg.datagrid("selectRow", index)
						.datagrid("beginEdit", index);
                departments_editIndex  = index;
				var ed = $departmentsdg.datagrid("getEditor", { index: index, field: field });
				if (ed) {
					($(ed.target).data("textbox") ? $(ed.target).textbox("textbox") : $(ed.target)).focus();
				}
				
			} else {
				$departmentsdg.datagrid("selectRow", departments_editIndex);
			}
		}
	}
	function departments_createitem() {
		if (departments_endEditing()) {
			 var company = $departmentsdg.datagrid("getSelected");

			$departmentsdg.datagrid("appendRow", { CompanyId:id   });
			departmentseditIndex = $departmentsdg.datagrid("getRows").length - 1;
			$departmentsdg.datagrid("selectRow", departments_editIndex )
					.datagrid("beginEdit", departments_editIndex);
		}
	}
	function departments_removeitem() {
		if (departments_editIndex  == undefined) { return }
		$departmentsdg.datagrid("cancelEdit", departments_editIndex )
				.datagrid("deleteRow", departments_editIndex );
		departmentseditIndex = undefined;
	}
   
	function departments_reject() {
		$departmentsdg.datagrid("rejectChanges");
		departments_editIndex  = undefined;
	}
	function departments_getChanges() {
		var rows = $departmentsdg.datagrid("getChanges");
		alert(rows.length + " rows are changed!");
	}
	function departments_saveitem() {
			if (departments_endEditing()) {
				if ($departmentsdg.datagrid("getChanges").length) {
					var inserted = $departmentsdg.datagrid("getChanges", "inserted");
					var deleted = $departmentsdg.datagrid("getChanges", "deleted");
					var updated = $departmentsdg.datagrid("getChanges", "updated");
					var effectRow = new Object();
					if (inserted.length) {
						effectRow.inserted = inserted;
					}
					if (deleted.length) {
						effectRow.deleted = deleted;
					}
					if (updated.length) {
						effectRow.updated = updated;
					}
					//console.log(JSON.stringify(effectRow));
					$.post("/Departments/SaveData", effectRow, function (response) {
						//console.log(response);
						if (response.Success) {
							$.messager.alert("提示", "提交成功！");
							$departmentsdg.datagrid("acceptChanges");
							$departmentsdg.datagrid("reload");
						}
					}, "json").fail(function (response) {
						//console.log(response);
						$.messager.alert("错误", "提交错误了！","error");
					  
					});
			  
				}

				//$departmentsdg.datagrid("acceptChanges");
			}
		}

	 




								//--------------------------------------------------------------------
				// #employees_datagrid functions
				//--------------------------------------------------------------------
				var $employeesdg = $("#employees_datagrid");

				var employees_editIndex = undefined;
		function employees_reload() {
				$employeesdg.datagrid("reload");
			}
	function employees_endEditing() {
		if ( employees_editIndex == undefined) { return true }
		if ($employeesdg.datagrid("validateRow", employees_editIndex)) {
						$employeesdg.datagrid("endEdit", employees_editIndex);
			employees_editIndex = undefined;


			return true;
		} else {
			return false;
		}
	}
	function employees_onClickCell(index, field) {
		if (employees_editIndex != index) {
			if (employees_endEditing()) {
				$employeesdg.datagrid("selectRow", index)
						.datagrid("beginEdit", index);
                employees_editIndex  = index;
				var ed = $employeesdg.datagrid("getEditor", { index: index, field: field });
				if (ed) {
					($(ed.target).data("textbox") ? $(ed.target).textbox("textbox") : $(ed.target)).focus();
				}
				
			} else {
				$employeesdg.datagrid("selectRow", employees_editIndex);
			}
		}
	}
	function employees_createitem() {
		if (employees_endEditing()) {
			 var company = $employeesdg.datagrid("getSelected");

			$employeesdg.datagrid("appendRow", { CompanyId:id   });
			employeeseditIndex = $employeesdg.datagrid("getRows").length - 1;
			$employeesdg.datagrid("selectRow", employees_editIndex )
					.datagrid("beginEdit", employees_editIndex);
		}
	}
	function employees_removeitem() {
		if (employees_editIndex  == undefined) { return }
		$employeesdg.datagrid("cancelEdit", employees_editIndex )
				.datagrid("deleteRow", employees_editIndex );
		employeeseditIndex = undefined;
	}
   
	function employees_reject() {
		$employeesdg.datagrid("rejectChanges");
		employees_editIndex  = undefined;
	}
	function employees_getChanges() {
		var rows = $employeesdg.datagrid("getChanges");
		alert(rows.length + " rows are changed!");
	}
	function employees_saveitem() {
			if (employees_endEditing()) {
				if ($employeesdg.datagrid("getChanges").length) {
					var inserted = $employeesdg.datagrid("getChanges", "inserted");
					var deleted = $employeesdg.datagrid("getChanges", "deleted");
					var updated = $employeesdg.datagrid("getChanges", "updated");
					var effectRow = new Object();
					if (inserted.length) {
						effectRow.inserted = inserted;
					}
					if (deleted.length) {
						effectRow.deleted = deleted;
					}
					if (updated.length) {
						effectRow.updated = updated;
					}
					//console.log(JSON.stringify(effectRow));
					$.post("/Employees/SaveData", effectRow, function (response) {
						//console.log(response);
						if (response.Success) {
							$.messager.alert("提示", "提交成功！");
							$employeesdg.datagrid("acceptChanges");
							$employeesdg.datagrid("reload");
						}
					}, "json").fail(function (response) {
						//console.log(response);
						$.messager.alert("错误", "提交错误了！","error");
					  
					});
			  
				}

				//$employeesdg.datagrid("acceptChanges");
			}
		}

	 




				
		 

                     function initdatagrid(){
               
		          
          $departmentsdg.datagrid({
                    rownumbers: true,
                    iconCls: 'fa fa-list',
                    idField: 'Id',
                    sortName: 'Id',
                    sortOrder: 'asc',
                    remoteFilter: true,
                    singleSelect: true,
                    toolbar: '#departments_toolbar',
                    method: 'get',
                    onClickCell: departments_onClickCell,
                    pagination: 'true',
                    url: '/Departments/GetDataByCompanyId?companyid='+ id,
                    striped: true,
                    columns: [[
                    														@*{field:'Id',
                                   title:'Id',
                                   width:80 },*@
																															{ field:'Name',
                                  title:'姓名',
                                  width:140,
                                  editor:{
                                          type:'textbox',
                                          options:{
                                                prompt:'姓名',
                                                required:false ,validType:'length[0,50]'
                                                 }
                                           } },
																																						{ field:'Manager',
                                  title:'Manager',
                                  width:140,
                                  editor:{
                                          type:'textbox',
                                          options:{
                                                prompt:'Manager',
                                                required:false ,validType:'length[0,20]'
                                                 }
                                           } },
																													                    
                    
                    
                    ]]
          });
                
                $departmentsdg.datagrid("enableFilter", [
                
           				{
					  field: "Id",
					  type: "numberbox",
					  op:['equal','notequal','less','lessorequal','greater','greaterorequal']
				  },
		   

		   		   
		   		   {
				 field: "CompanyId",
				 type:"combobox",
				 options:{
								valueField:"Id",
								textField:"Name",
								method:"get",
								url:"/Companies/GetCompanies",
								onChange: function (value) {
								if (value == "") {
									$departmentsdg.datagrid("removeFilterRule", "CompanyId");
								} else {
									$departmentsdg.datagrid("addFilterRule", {
										field: "CompanyId",
										op: "equal",
										value: value
								});
							}
							$departmentsdg.datagrid("doFilter");
						}
					}
		   },
		   									]);
                   
          $employeesdg.datagrid({
                    rownumbers: true,
                    iconCls: 'fa fa-list',
                    idField: 'Id',
                    sortName: 'Id',
                    sortOrder: 'asc',
                    remoteFilter: true,
                    singleSelect: true,
                    toolbar: '#employees_toolbar',
                    method: 'get',
                    onClickCell: employees_onClickCell,
                    pagination: 'true',
                    url: '/Employees/GetDataByCompanyId?companyid='+ id,
                    striped: true,
                    columns: [[
                    														@*{field:'Id',
                                   title:'Id',
                                   width:80 },*@
																															{ field:'Name',
                                  title:'姓名',
                                  width:140,
                                  editor:{
                                          type:'textbox',
                                          options:{
                                                prompt:'姓名',
                                                required:false ,validType:'length[0,50]'
                                                 }
                                           } },
																																						{ field:'Title',
                                  title:'职称',
                                  width:140,
                                  editor:{
                                          type:'textbox',
                                          options:{
                                                prompt:'职称',
                                                required:false ,validType:'length[0,30]'
                                                 }
                                           } },
																																						{ field:'Sex',
                                  title:'性别',
                                  width:140,
                                  editor:{
                                          type:'textbox',
                                          options:{
                                                prompt:'性别',
                                                required:true ,validType:'length[0,10]'
                                                 }
                                           } },
																																				     { field:'Age',
                                   title:'年龄',
                                   width:120,
                                   align:'right',
                                   editor:{
                                           type:'numberbox',
                                           options:{
                                                   prompt:'年龄',
                                                   required:true ,precision:0
                                             } 
                                           } ,
                                   sortable:true,
                                   resizable:true },
																																						{ field:'Brithday',
                                  title:'生日',
                                  width:160,
                                  align:'right',
                                  editor:{
                                          type:'datebox',
                                          options:{
                                             prompt:'生日',
                                             required:true
                                           }
                                          },
                                   formatter:dateformatter},
																																				     { field:'IsDeleted',
                                   title:'是否已删除',
                                   width:120,
                                   align:'right',
                                   editor:{
                                           type:'numberbox',
                                           options:{
                                                   prompt:'是否已删除',
                                                   required:true ,precision:0
                                             } 
                                           } ,
                                   sortable:true,
                                   resizable:true },
																													                    
                    
                    
                    ]]
          });
                
                $employeesdg.datagrid("enableFilter", [
                
           				{
					  field: "Id",
					  type: "numberbox",
					  op:['equal','notequal','less','lessorequal','greater','greaterorequal']
				  },
		   				{
					  field: "Age",
					  type: "numberbox",
					  op:['equal','notequal','less','lessorequal','greater','greaterorequal']
				  },
		   				{
					  field: "IsDeleted",
					  type: "numberbox",
					  op:['equal','notequal','less','lessorequal','greater','greaterorequal']
				  },
		   

		   				{
					  field: "Brithday",
					  type: "dateRange",
					  options: {
						  onChange: function (value) {
							    $employeesdg.datagrid("addFilterRule", {
									  field: "Brithday",
									  op: "between",
									  value: value
								  });
							   
							    $employeesdg.datagrid("doFilter");
						  }
					  }
				  },
		   		   
		   		   {
				 field: "CompanyId",
				 type:"combobox",
				 options:{
								valueField:"Id",
								textField:"Name",
								method:"get",
								url:"/Companies/GetCompanies",
								onChange: function (value) {
								if (value == "") {
									$employeesdg.datagrid("removeFilterRule", "CompanyId");
								} else {
									$employeesdg.datagrid("addFilterRule", {
										field: "CompanyId",
										op: "equal",
										value: value
								});
							}
							$employeesdg.datagrid("doFilter");
						}
					}
		   },
		   									]);
                  }
         /* 初始化datagrid */
         initdatagrid();

  
  

 </script>

