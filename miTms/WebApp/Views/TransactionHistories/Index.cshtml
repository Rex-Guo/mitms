@model IEnumerable<WebApp.Models.TransactionHistory>
@{
	ViewBag.Title = "跟踪历史状态信息";
}
<!-- MAIN CONTENT -->
<div id="content">
    <!-- quick navigation bar -->
    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-table fa-fw "></i>
                @{ 
                  //TODO:fix quick navigation path
                 }
                业务操作
                <span>
                    >
                  跟踪历史状态信息
                </span>
            </h1>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
            
        </div>
    </div>
    <!-- end quick navigation bar -->


     <!-- widget grid -->
     <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>跟踪历史状态信息</h2>
                    </header>

                     <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">
                             @{ 
                                //TODO:fix datagrid view alert-warning messages
                              }
                            <div class="alert alert-warning no-margin fade in">
                                <button class="close" data-dismiss="alert">
                                    ×
                                </button>
                                <i class="fa-fw fa fa-info"></i>
                                
                            </div>
	 <!--begin datagrid-content -->
	 <div class="table-responsive">
		<table id="transactionhistories_datagrid">  
		</table>
				<div id="transactionhistories_toolbar" style="height:auto">
                            @{
                            //TODO: enable authorization 
                            }
							@*@if (Html.IsAuthorize("Create"))
							{
								<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-plus fa-fw',plain:true" onclick="append()">新增</a>
							}
							@if (Html.IsAuthorize("Delete"))
							{
							<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-trash-o fa-fw',plain:true" onclick="removeit()">删除</a>
							}
							@if (Html.IsAuthorize("Edit"))
							{
								<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-floppy-o fa-fw',plain:true" onclick="accept()">保存</a>
								<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-undo fa-fw',plain:true" onclick="reject()">取消</a>
							}
							<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-refresh fa-fw',plain:true" onclick="reload()">刷新</a>
							@if (Html.IsAuthorize("Import"))
							{
								 <a href="javascript:void(0)" class="easyui-menubutton" data-options="menu:'#importmenu',iconCls:'fa fa-upload fa-fw' " onclick="importexcel()">导入数据</a>
                                       <div id="importmenu" style="width:150px;">
                                                <div data-options="iconCls:'fa fa-file-excel-o fa-fw'" onclick="importexcel()">导入数据</div>
                                                <div data-options="iconCls:'fa fa-cloud-download fa-fw'" onclick="downloadtemplate()" >下载用于导入的模板</div>
                                        </div>
                                 <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-cloud-download fa-fw',plain:true" onclick="exportexcel()">导出至Excel</a>
							}*@
						    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-plus fa-fw',plain:true" onclick="append()">新增</a>
							<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-trash-o fa-fw',plain:true" onclick="removeit()">删除</a>
							<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-floppy-o fa-fw',plain:true" onclick="accept()">保存</a>
							<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-undo fa-fw',plain:true" onclick="reject()">取消</a>
							<a href="javascript:void(0)" class="easyui-menubutton" data-options="menu:'#importmenu',iconCls:'fa fa-upload fa-fw' " onclick="importexcel()">导入数据</a>
                                       <div id="importmenu" style="width:150px;">
                                                <div data-options="iconCls:'fa fa-file-excel-o fa-fw'" onclick="importexcel()">导入数据</div>
                                                <div data-options="iconCls:'fa fa-cloud-download fa-fw'" onclick="downloadtemplate()" >下载用于导入的模板</div>
                                        </div>
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-cloud-download fa-fw',plain:true" onclick="exportexcel()">导出至Excel</a>
							<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-refresh fa-fw',plain:true" onclick="reload()">刷新</a>
				            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-question-circle-o fa-fw',plain:true" onclick="dohelp()">帮助</a>
                </div>
		
		
		</div>
		<!--end datagrid-content -->
                        
                         </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- WIDGET END -->

        </div>

        <!-- end row -->
    </section>
    <!-- end widget grid -->

	<!-- file upload partial view -->
	@Html.Partial("_ImportWindow",new  ViewDataDictionary { { "EntityName","TransactionHistory" }})		 
	<!-- end file upload partial view -->
        
    <!-- detail popup window -->
    @Html.Partial("_PopupDetailFormView",new WebApp.Models.TransactionHistory() )
    <!-- end detail popup window -->
            
</div>
<!-- END MAIN CONTENT -->

@section Scripts {
	<script type="text/javascript">
        var entityname = "TransactionHistory";


			        //下载Excel导入模板
                    function downloadtemplate() {
                            //TODO: 修改下载模板的路径
                            var url = "/ExcelTemplate/TransactionHistory.xlsx";
                            $.fileDownload(url)
                             .fail(function () { $.messager.alert("错误","没有找到模板文件! {" + url + "}"); });
                                                
                    }
					//打开Excel上传导入
					function importexcel() {
						$("#importwindow").window("open");
					}
					 //执行Excel到处下载
					function exportexcel() {
						var filterRules = JSON.stringify($dg.datagrid("options").filterRules);
						//console.log(filterRules);
						$.messager.progress({ title: "正在执行导出！" });
						var formData = new FormData();
						formData.append("filterRules", filterRules);
						formData.append("sort", "Id");
						formData.append("order", "asc");
						$.postDownload("/TransactionHistories/ExportExcel", formData, function (fileName) {
							$.messager.progress("close");
							console.log(fileName);

						})
					}
        //显示帮助信息
        function dohelp() {

        }
		 //datagrid 增删改查操作
          var $dg = $("#transactionhistories_datagrid").datagrid({
                        rownumbers:true,
				        checkOnSelect:true,
				        selectOnCheck:true,
				        idField:'Id',
				        sortName:'Id',
				        sortOrder:'desc',
				        remoteFilter: true,
				        singleSelect: true,
				        toolbar: '#transactionhistories_toolbar',
				        url: '/TransactionHistories/GetData',
				        method: 'get',
				        onClickCell: onClickCell,
				        pagination: true,
                        striped:true,   
                         columns: [[
                         /*{ field: 'ck', checkbox: true },*/
                         { field: '_operate1', title:'操作', width: 120, sortable: false, resizable: true, formatter: showdetailsformatter},
                        					/*{field:'Id',width:80 ,sortable:true,resizable:true }*/
									 {field:'OrderNo', 
              title:'@Html.DisplayNameFor(model => model.OrderNo)', 
              width:140,
              editor:{
                      type:'textbox',
                      options:{ prompt:'订单号',required:false ,validType:'length[0,20]'  }  
                     },
              sortable:true,
              resizable:true },
											 {field:'PlateNumber', 
              title:'@Html.DisplayNameFor(model => model.PlateNumber)', 
              width:140,
              editor:{
                      type:'textbox',
                      options:{ prompt:'车牌号',required:false ,validType:'length[0,10]'  }  
                     },
              sortable:true,
              resizable:true },
											 {field:'Status', 
              title:'@Html.DisplayNameFor(model => model.Status)', 
              width:140,
              editor:{
                      type:'textbox',
                      options:{ prompt:'状态',required:false ,validType:'length[0,20]'  }  
                     },
              sortable:true,
              resizable:true },
											 {field:'TransactioDateTime', 
              title:'@Html.DisplayNameFor(model => model.TransactioDateTime)', 
              width:160, 
              align:'right', 
              editor:{
                      type:'datebox',
                      options:{prompt:'更新时间',required:true}  
                      },
              sortable:true, 
              resizable:true, 
              formatter:dateformatter },
											 {field:'Remark', 
              title:'@Html.DisplayNameFor(model => model.Remark)', 
              width:140,
              editor:{
                      type:'textbox',
                      options:{ prompt:'备注',required:false ,validType:'length[0,120]'  }  
                     },
              sortable:true,
              resizable:true },
											 {field:'Flag1', 
              title:'@Html.DisplayNameFor(model => model.Flag1)', 
              width:100, 
              align:'right',
              editor:{
                      type:'numberbox',
                      options:{prompt:'标识1', required:true   } 
                     },
              sortable:true,
              resizable:true },
											 {field:'Flag2', 
              title:'@Html.DisplayNameFor(model => model.Flag2)', 
              width:100, 
              align:'right',
              editor:{
                      type:'numberbox',
                      options:{prompt:'标识2', required:true   } 
                     },
              sortable:true,
              resizable:true },
											 {field:'InputUser', 
              title:'@Html.DisplayNameFor(model => model.InputUser)', 
              width:140,
              editor:{
                      type:'textbox',
                      options:{ prompt:'操作人员',required:false ,validType:'length[0,20]'  }  
                     },
              sortable:true,
              resizable:true },
											 {field:'Longitude', 
              title:'@Html.DisplayNameFor(model => model.Longitude)', 
              width:100, 
              align:'right',
              editor:{
                      type:'numberbox',
                      options:{prompt:'经度', required:true   } 
                     },
              sortable:true,
              resizable:true },
											 {field:'Latitude', 
              title:'@Html.DisplayNameFor(model => model.Latitude)', 
              width:100, 
              align:'right',
              editor:{
                      type:'numberbox',
                      options:{prompt:'维度', required:true   } 
                     },
              sortable:true,
              resizable:true },
											 {field:'PhotographPath', 
              title:'@Html.DisplayNameFor(model => model.PhotographPath)', 
              width:140,
              editor:{
                      type:'textbox',
                      options:{ prompt:'照片路径',required:false ,validType:'length[0,50]'  }  
                     },
              sortable:true,
              resizable:true },
											{field:'Photograph', 
             title:'@Html.DisplayNameFor(model => model.Photograph)', 
             width:120, 
             editor:{
                    type:'textbox', 
                    options:{
                             prompt:'照片', 
                             required:false 
                            } 
                     }, 
              sortable:true, 
              resizable:true },
											 {field:'Remark2', 
              title:'@Html.DisplayNameFor(model => model.Remark2)', 
              width:140,
              editor:{
                      type:'textbox',
                      options:{ prompt:'备注',required:false ,validType:'length[0,150]'  }  
                     },
              sortable:true,
              resizable:true },
				
                         ]]
          
          });
		 var editIndex = undefined;
		 function reload() {
				 if (endEditing()) {
						$dg.datagrid("reload");
				 }
			}
		function endEditing() {
			if (editIndex == undefined) { return true }
			if ($dg.datagrid("validateRow", editIndex)) {

								$dg.datagrid("endEdit", editIndex);
				editIndex = undefined;

				
				return true;
			} else {
				return false;
			}
		}
		function onClickCell(index, field) {
			var _operates = ["_operate1", "_operate2", "_operate3", "ck"]
			if ($.inArray(field, _operates) >= 0) {
				return;
			}
			if (editIndex != index) {
				if (endEditing()) {
					$dg.datagrid("selectRow", index)
							.datagrid("beginEdit", index);
                    editIndex = index;
					var ed = $dg.datagrid("getEditor", { index: index, field: field });
					if (ed) {
						($(ed.target).data("textbox") ? $(ed.target).textbox("textbox") : $(ed.target)).focus();
					}
					
				} else {
					$dg.datagrid("selectRow", editIndex);
				}
			}
		}
		function append() {
			if (endEditing()) {
				//$dg.datagrid("appendRow", { Status: 0 });
				//editIndex = $dg.datagrid("getRows").length - 1;
				$dg.datagrid("insertRow", { index: 0, row: {  } });
				editIndex = 0 ;
				$dg.datagrid("selectRow", editIndex)
						.datagrid("beginEdit", editIndex);
			}
		}
		function removeit() {
			if (editIndex == undefined) { return }
			$dg.datagrid("cancelEdit", editIndex)
					.datagrid("deleteRow", editIndex);
			editIndex = undefined;
		}
		function accept() {
			if (endEditing()) {
				if ($dg.datagrid("getChanges").length) {
					var inserted = $dg.datagrid("getChanges", "inserted");
					var deleted = $dg.datagrid("getChanges", "deleted");
					var updated = $dg.datagrid("getChanges", "updated");
					var effectRow = new Object();
					if (inserted.length) {
						effectRow.inserted = inserted;
					}
					if (deleted.length) {
						effectRow.deleted = deleted;
					}
					if (updated.length) {
						effectRow.updated = updated;
					}
					//console.log(JSON.stringify(effectRow));
					$.post("/TransactionHistories/SaveData", effectRow, function (response) {
						//console.log(response);
						if (response.Success) {
							$.messager.alert("提示", "提交成功！");
							$dg.datagrid("acceptChanges");
							$dg.datagrid("reload");
						}
					}, "json").fail(function (response) {
						//console.log(response);
						$.messager.alert("错误", "提交错误了！","error");
						//$dg.datagrid("reload");
					});
			  
				}

				//$dg.datagrid("acceptChanges");
			}
		}
		function reject() {
			$dg.datagrid("rejectChanges");
			editIndex = undefined;
		}
		function getChanges() {
			var rows = $dg.datagrid("getChanges");
			alert(rows.length + " rows are changed!");
		}

		//datagrid 开启筛选功能
		 $(function () {
		  
		   $dg.datagrid("enableFilter",[
		   				{
					  field: "Status",
					  type: "combobox",
					  options: {
						   panelHeight: "auto",
						   data: [{ value: "", text: "All" }, { value: 0, text: "启用" }, { value: 1, text: "禁用" }],
						   onChange: function (value) {
							  if (value == "") {
								  $dg.datagrid("removeFilterRule", "Status");
							  } else {
								  $dg.datagrid("addFilterRule", {
									  field: "Status",
									  op: "equal",
									  value: value
								  });
							  }
							  $dg.datagrid("doFilter");
						  }
					  }
				  },
		   
           				{
					  field: "Id",
					  type: "numberbox",
					  op:['equal','notequal','less','lessorequal','greater','greaterorequal']
				  },
		   				{
					  field: "Flag1",
					  type: "numberbox",
					  op:['equal','notequal','less','lessorequal','greater','greaterorequal']
				  },
		   				{
					  field: "Flag2",
					  type: "numberbox",
					  op:['equal','notequal','less','lessorequal','greater','greaterorequal']
				  },
		   				{
					  field: "Longitude",
					  type: "numberbox",
					  op:['equal','notequal','less','lessorequal','greater','greaterorequal']
				  },
		   				{
					  field: "Latitude",
					  type: "numberbox",
					  op:['equal','notequal','less','lessorequal','greater','greaterorequal']
				  },
		   

		   				{
					  field: "TransactioDateTime",
					  type: "dateRange",
					  options: {
						  onChange: function (value) {
							    $dg.datagrid("addFilterRule", {
									  field: "TransactioDateTime",
									  op: "between",
									  value: value
								  });
							   
							    $dg.datagrid("doFilter");
						  }
					  }
				  },
		   		   
		   		   
		   ]);
		})
				//-----------------------------------------------------
		//datagrid onSelect
		//-----------------------------------------------------
        function showdetailsformatter(value, row, index) {

            return '<a onclick="showDetailsWindow(' + row.Id + ')" class="btn btn-default btn-sm" href="javascript:void(0)"><i class="fa fa-list"></i> 查看明细</a>';

        }
        //弹出明细信息
		function showDetailsWindow(id) {
			//console.log(index, row);
            $.getJSON('/TransactionHistories/PopupEdit/' + id, function (data, status, xhr) {
                //console.log(data);
                $('#detailswindow').window('open');
                loadData(id,data);
                

            });
          
		}
 
		
		
		 

	 </script>
     <script src="~/Scripts/jquery.filerupload.js"></script>
}

 
