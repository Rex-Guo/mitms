@model IEnumerable<WebApp.Models.Vehicle>
@{
    ViewBag.Title = "车辆档案";
}
<!-- MAIN CONTENT -->
<div id="content">
    <!-- quick navigation bar -->
    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-table fa-fw "></i>
                @{
                    //TODO:fix quick navigation path
                }
                主数据管理
                <span>
                    >
                    车辆档案
                </span>
            </h1>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">

        </div>
    </div>
    <!-- end quick navigation bar -->
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"
                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>车辆档案</h2>
                    </header>

                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">
                            @{
                                //TODO:fix datagrid view alert-warning messages
                            }
                            <div class="alert alert-warning no-margin fade in">
                                <button class="close" data-dismiss="alert">
                                    ×
                                </button>
                                <i class="fa-fw fa fa-info"></i>
                                
                            </div>
                            <!--begin datagrid-content -->
                            <div class="table-responsive">
                                <table id="vehicles_datagrid"></table>
                                <div id="vehicles_toolbar" style="height:auto">
                                    @{
                                        //TODO: enable authorization
                                    }
                                    @*@if (Html.IsAuthorize("Create"))
                                        {
                                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-plus fa-fw',plain:true" onclick="append()">新增</a>
                                        }
                                        @if (Html.IsAuthorize("Delete"))
                                        {
                                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-trash-o fa-fw',plain:true" onclick="removeit()">删除</a>
                                        }
                                        @if (Html.IsAuthorize("Edit"))
                                        {
                                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-floppy-o fa-fw',plain:true" onclick="accept()">保存</a>
                                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-undo fa-fw',plain:true" onclick="reject()">取消</a>
                                        }
                                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-refresh fa-fw',plain:true" onclick="reload()">刷新</a>
                                        @if (Html.IsAuthorize("Import"))
                                        {
                                             <a href="javascript:void(0)" class="easyui-menubutton" data-options="menu:'#importmenu',iconCls:'fa fa-upload fa-fw' " onclick="importexcel()">导入数据</a>
                                                   <div id="importmenu" style="width:150px;">
                                                            <div data-options="iconCls:'fa fa-file-excel-o fa-fw'" onclick="importexcel()">导入数据</div>
                                                            <div data-options="iconCls:'fa fa-cloud-download fa-fw'" onclick="downloadtemplate()" >下载用于导入的模板</div>
                                                    </div>
                                             <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-cloud-download fa-fw',plain:true" onclick="exportexcel()">导出至Excel</a>
                                        }*@
                                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-plus fa-fw',plain:true" onclick="append()">新增</a>
                                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-trash-o fa-fw',plain:true" onclick="removeit()">删除</a>
                                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-floppy-o fa-fw',plain:true" onclick="accept()">保存</a>
                                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-undo fa-fw',plain:true" onclick="reject()">取消</a>
                                    <a href="javascript:void(0)" class="easyui-menubutton" data-options="menu:'#importmenu',iconCls:'fa fa-upload fa-fw' " onclick="importexcel()">导入数据</a>
                                    <div id="importmenu" style="width:150px;">
                                        <div data-options="iconCls:'fa fa-file-excel-o fa-fw'" onclick="importexcel()">导入数据</div>
                                        <div data-options="iconCls:'fa fa-cloud-download fa-fw'" onclick="downloadtemplate()">下载用于导入的模板</div>
                                    </div>
                                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-cloud-download fa-fw',plain:true" onclick="exportexcel()">导出至Excel</a>
                                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-refresh fa-fw',plain:true" onclick="reload()">刷新</a>
                                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-question-circle-o fa-fw',plain:true" onclick="dohelp()">帮助</a>
                                </div>


                            </div>
                            <!--end datagrid-content -->

                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- WIDGET END -->

        </div>

        <!-- end row -->
    </section>
    <!-- end widget grid -->
    <!-- file upload partial view -->
    @Html.Partial("_ImportWindow", new ViewDataDictionary { { "EntityName", "Vehicle" } })
    <!-- end file upload partial view -->
    <!-- detail popup window -->
    @Html.Partial("_PopupDetailFormView", new WebApp.Models.Vehicle())
    <!-- end detail popup window -->

</div>
<!-- END MAIN CONTENT -->

@section Scripts {
    <script type="text/javascript">
       var entityname = "Vehicle";


 //下载Excel导入模板
 function downloadtemplate() {
     //TODO: 修改下载模板的路径
     var url = "/ExcelTemplate/Vehicle.xlsx";
     $.fileDownload(url)
         .fail(function() {
             $.messager.alert("错误", "没有找到模板文件! {" + url + "}");
         });

 }
 //打开Excel上传导入
 function importexcel() {
     $("#importwindow").window("open");
 }
 //执行Excel到处下载
 function exportexcel() {
     var filterRules = JSON.stringify($dg.datagrid("options").filterRules);
     //console.log(filterRules);
     $.messager.progress({
         title: "正在执行导出！"
     });
     var formData = new FormData();
     formData.append("filterRules", filterRules);
     formData.append("sort", "Id");
     formData.append("order", "asc");
     $.postDownload("/Vehicles/ExportExcel", formData, function(fileName) {
         $.messager.progress("close");
         console.log(fileName);

     })
 }
 //显示帮助信息
 function dohelp() {

 }
 //datagrid 增删改查操作
 var $dg = $("#vehicles_datagrid").datagrid({
     rownumbers: true,
     checkOnSelect: true,
     selectOnCheck: true,
     idField: 'Id',
     sortName: 'Id',
     sortOrder: 'desc',
     remoteFilter: true,
     singleSelect: true,
     toolbar: '#vehicles_toolbar',
     url: '/Vehicles/GetData',
     method: 'get',
     onClickCell: onClickCell,
     pagination: true,
     striped: true,
     columns: [
         [
             /*{ field: 'ck', checkbox: true },*/
             {
                 field: '_operate1',
                 title: '操作',
                 width: 120,
                 sortable: false,
                 resizable: true,
                 formatter: showdetailsformatter
             },
             /*{field:'Id',width:80 ,sortable:true,resizable:true }*/

             {
                 field: 'PlateNumber',
                 title: '@Html.DisplayNameFor(model => model.PlateNumber)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车牌号',
                         required: true,
                         validType: 'length[0,10]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'PlateNumberPosition',
                 title: '@Html.DisplayNameFor(model => model.PlateNumberPosition)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车头/车挂',
                         required: true,
                         validType: 'length[0,10]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehStatus',
                 title: '@Html.DisplayNameFor(model => model.VehStatus)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车辆状态',
                         required: true,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'CarType',
                 title: '@Html.DisplayNameFor(model => model.CarType)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车辆类型',
                         required: true,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehicleType',
                 title: '@Html.DisplayNameFor(model => model.VehicleType)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车辆种类',
                         required: false,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehicleProperty',
                 title: '@Html.DisplayNameFor(model => model.VehicleProperty)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车辆性质',
                         required: true,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'CompanyId',
                 title: '@Html.DisplayNameFor(model => model.CompanyId)',
                 width: 160,
                 sortable: true,
                 resizable: true,
                 formatter: function(value, row) {
                     return row.CompanyName;
                 },
                 editor: {
                     type: 'combobox',
                     options: {
                         prompt: '所属公司',
                         mode: 'remote',
                         valueField: 'Id',
                         textField: 'Name',
                         method: 'get',
                         url: '/Vehicles/GetCompanies',
                         required: true
                     }
                 }
             },
             {
                 field: 'Axles',
                 title: '@Html.DisplayNameFor(model => model.Axles)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '轴数',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'ECOMark',
                 title: '@Html.DisplayNameFor(model => model.ECOMark)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '环保标志',
                         required: true
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'StrLoadWeight',
                 title: '@Html.DisplayNameFor(model => model.StrLoadWeight)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '额定载重',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'LoadWeight',
                 title: '@Html.DisplayNameFor(model => model.LoadWeight)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '收费吨位',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'LoadVolume',
                 title: '@Html.DisplayNameFor(model => model.LoadVolume)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '额定体积',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'CarriageSize',
                 title: '@Html.DisplayNameFor(model => model.CarriageSize)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '车厢尺寸(尺)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'Driver',
                 title: '@Html.DisplayNameFor(model => model.Driver)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '主驾司机',
                         required: true,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DriverPhone',
                 title: '@Html.DisplayNameFor(model => model.DriverPhone)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '主驾司机电话',
                         required: true,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'AssistantDriver',
                 title: '@Html.DisplayNameFor(model => model.AssistantDriver)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '副驾司机',
                         required: false,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'AssistantDriverPhone',
                 title: '@Html.DisplayNameFor(model => model.AssistantDriverPhone)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '副驾司机电话',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehLongSize',
                 title: '@Html.DisplayNameFor(model => model.VehLongSize)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '车长(米)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'CubicleType',
                 title: '@Html.DisplayNameFor(model => model.CubicleType)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '箱型',
                         required: false,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehUseType',
                 title: '@Html.DisplayNameFor(model => model.VehUseType)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车辆使用类型',
                         required: false,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'CustomsNo',
                 title: '@Html.DisplayNameFor(model => model.CustomsNo)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '海关编号',
                         required: false,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehUse',
                 title: '@Html.DisplayNameFor(model => model.VehUse)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车辆用途',
                         required: false,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'AVGECON',
                 title: '@Html.DisplayNameFor(model => model.AVGECON)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '平均油耗(L/100)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'AVGECONScale',
                 title: '@Html.DisplayNameFor(model => model.AVGECONScale)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '油耗因子',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'RoadKM',
                 title: '@Html.DisplayNameFor(model => model.RoadKM)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '总行驶里程',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'RoadHours',
                 title: '@Html.DisplayNameFor(model => model.RoadHours)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '行驶时间',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'RoadKMScale',
                 title: '@Html.DisplayNameFor(model => model.RoadKMScale)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '里程因子',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'GPSDeviceId',
                 title: '@Html.DisplayNameFor(model => model.GPSDeviceId)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: 'GPS设备编号',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'Owner',
                 title: '@Html.DisplayNameFor(model => model.Owner)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车主',
                         required: false,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'OwnerContactPhone',
                 title: '@Html.DisplayNameFor(model => model.OwnerContactPhone)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车主联系电话',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'Brand',
                 title: '@Html.DisplayNameFor(model => model.Brand)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '品牌',
                         required: false,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'RPM',
                 title: '@Html.DisplayNameFor(model => model.RPM)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '额定转速',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'PurchasedDate',
                 title: '@Html.DisplayNameFor(model => model.PurchasedDate)',
                 width: 160,
                 align: 'right',
                 editor: {
                     type: 'datebox',
                     options: {
                         prompt: '购买日期',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true,
                 formatter: dateformatter
             },
             {
                 field: 'PurchasedAmount',
                 title: '@Html.DisplayNameFor(model => model.PurchasedAmount)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '购买金额',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehLong',
                 title: '@Html.DisplayNameFor(model => model.VehLong)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '车厢长(米)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehWide',
                 title: '@Html.DisplayNameFor(model => model.VehWide)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '车厢宽(米)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehHigh',
                 title: '@Html.DisplayNameFor(model => model.VehHigh)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '车厢高(米)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VIN',
                 title: '@Html.DisplayNameFor(model => model.VIN)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '车架号',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'ServiceLife',
                 title: '@Html.DisplayNameFor(model => model.ServiceLife)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '使用年限',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'MaintainKM',
                 title: '@Html.DisplayNameFor(model => model.MaintainKM)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '保养公里数',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'MaintainDate',
                 title: '@Html.DisplayNameFor(model => model.MaintainDate)',
                 width: 160,
                 align: 'right',
                 editor: {
                     type: 'datebox',
                     options: {
                         prompt: '下次保养日期',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true,
                 formatter: dateformatter
             },
             {
                 field: 'MaintainMonth',
                 title: '@Html.DisplayNameFor(model => model.MaintainMonth)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '保养周期(月)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'ExistVehTailBoard',
                 title: '@Html.DisplayNameFor(model => model.ExistVehTailBoard)',
                 width: 120,
                 align: 'center',
                 editor: {
                     type: 'checkbox',
                     options: {
                         prompt: '车辆尾板',
                         on: 'true',
                         off: 'false',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehTailBoardBrand',
                 title: '@Html.DisplayNameFor(model => model.VehTailBoardBrand)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '尾板品牌',
                         required: false,
                         validType: 'length[0,30]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehTailBoardFactory',
                 title: '@Html.DisplayNameFor(model => model.VehTailBoardFactory)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '尾板厂家',
                         required: false,
                         validType: 'length[0,30]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehTailBoardLife',
                 title: '@Html.DisplayNameFor(model => model.VehTailBoardLife)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '尾板使用年限',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehTailBoardAmount',
                 title: '@Html.DisplayNameFor(model => model.VehTailBoardAmount)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '尾板价值',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'VehTailBoardGPSDeviceId',
                 title: '@Html.DisplayNameFor(model => model.VehTailBoardGPSDeviceId)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '尾板GPS设备编号',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseModel',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseModel)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '型号代码',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseUseNature',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseUseNature)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '使用性质',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseBrand',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseBrand)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '品牌',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseDevId',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseDevId)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '识别代码',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseEngineId',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseEngineId)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '发动机号',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseRegistrationDate',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseRegistrationDate)',
                 width: 160,
                 align: 'right',
                 editor: {
                     type: 'datebox',
                     options: {
                         prompt: '注册日期',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true,
                 formatter: dateformatter
             },
             {
                 field: 'DrLicensePubDate',
                 title: '@Html.DisplayNameFor(model => model.DrLicensePubDate)',
                 width: 160,
                 align: 'right',
                 editor: {
                     type: 'datebox',
                     options: {
                         prompt: '发证日期',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true,
                 formatter: dateformatter
             },
             {
                 field: 'DrLicenseRatedUsers',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseRatedUsers)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '额定人数',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseVehWeight',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseVehWeight)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '车辆重量(吨)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseDevWeight',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseDevWeight)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '整备重量(吨)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseNetWeight',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseNetWeight)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '净重(吨)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseNetVolume',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseNetVolume)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '净空(立方)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseVehWide',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseVehWide)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '外限宽(米)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseVehHigh',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseVehHigh)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '外限高(米)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseVehLong',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseVehLong)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '外限长(米)',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'DrLicenseScrapedDate',
                 title: '@Html.DisplayNameFor(model => model.DrLicenseScrapedDate)',
                 width: 160,
                 align: 'right',
                 editor: {
                     type: 'datebox',
                     options: {
                         prompt: '强制报废日期',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true,
                 formatter: dateformatter
             },
             {
                 field: 'LoLicenseManageId',
                 title: '@Html.DisplayNameFor(model => model.LoLicenseManageId)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '文管子号',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'LoLicenseId',
                 title: '@Html.DisplayNameFor(model => model.LoLicenseId)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '运营许可证号',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'LoLicenseBusinessScope',
                 title: '@Html.DisplayNameFor(model => model.LoLicenseBusinessScope)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '经营范围',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'LoLicensePubDate',
                 title: '@Html.DisplayNameFor(model => model.LoLicensePubDate)',
                 width: 160,
                 align: 'right',
                 editor: {
                     type: 'datebox',
                     options: {
                         prompt: '发证日期',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true,
                 formatter: dateformatter
             },
             {
                 field: 'LoLicenseValidDate',
                 title: '@Html.DisplayNameFor(model => model.LoLicenseValidDate)',
                 width: 160,
                 align: 'right',
                 editor: {
                     type: 'datebox',
                     options: {
                         prompt: '二级有效期',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true,
                 formatter: dateformatter
             },
             {
                 field: 'LoLicenseCheckDate',
                 title: '@Html.DisplayNameFor(model => model.LoLicenseCheckDate)',
                 width: 160,
                 align: 'right',
                 editor: {
                     type: 'datebox',
                     options: {
                         prompt: '年检日期',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true,
                 formatter: dateformatter
             },
             {
                 field: 'LoLicensePlace',
                 title: '@Html.DisplayNameFor(model => model.LoLicensePlace)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '注册地',
                         required: false,
                         validType: 'length[0,30]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'InsTrafficPolicyId',
                 title: '@Html.DisplayNameFor(model => model.InsTrafficPolicyId)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '交强险保单',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'InsTrafficPolicyCompany',
                 title: '@Html.DisplayNameFor(model => model.InsTrafficPolicyCompany)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '保险公司',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'InsTrafficPolicyVaildateDate',
                 title: '@Html.DisplayNameFor(model => model.InsTrafficPolicyVaildateDate)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '交强险保单有效期',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'InsTrafficPolicyAmount',
                 title: '@Html.DisplayNameFor(model => model.InsTrafficPolicyAmount)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '交强险保额',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'InsThirdPartyId',
                 title: '@Html.DisplayNameFor(model => model.InsThirdPartyId)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '第三者保单号',
                         required: false,
                         validType: 'length[0,50]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'InsThirdPartyVaildateDate',
                 title: '@Html.DisplayNameFor(model => model.InsThirdPartyVaildateDate)',
                 width: 160,
                 align: 'right',
                 editor: {
                     type: 'datebox',
                     options: {
                         prompt: '第三者保单有效期',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true,
                 formatter: dateformatter
             },
             {
                 field: 'InsThirdPartyAmount',
                 title: '@Html.DisplayNameFor(model => model.InsThirdPartyAmount)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '第三者保单额',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'InsThirdPartyLogisticsAmount',
                 title: '@Html.DisplayNameFor(model => model.InsThirdPartyLogisticsAmount)',
                 width: 100,
                 align: 'right',
                 editor: {
                     type: 'numberbox',
                     options: {
                         prompt: '物流责任险保额',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true
             },
             {
                 field: 'InsThirdPartyLogisticsVaildateDate',
                 title: '@Html.DisplayNameFor(model => model.InsThirdPartyLogisticsVaildateDate)',
                 width: 160,
                 align: 'right',
                 editor: {
                     type: 'datebox',
                     options: {
                         prompt: '物流责任险有效期',
                         required: false
                     }
                 },
                 sortable: true,
                 resizable: true,
                 formatter: dateformatter
             },
             {
                 field: 'Status',
                 title: '@Html.DisplayNameFor(model => model.Status)',
                 width: 140,
                 editor: {
                     type: 'textbox',
                     options: {
                         prompt: '状态',
                         required: false,
                         validType: 'length[0,20]'
                     }
                 },
                 sortable: true,
                 resizable: true
             },

         ]
     ]

 });
 var editIndex = undefined;

 function reload() {
     if (endEditing()) {
         $dg.datagrid("reload");
     }
 }

 function endEditing() {
     if (editIndex == undefined) {
         return true
     }
     if ($dg.datagrid("validateRow", editIndex)) {

         var ed = $dg.datagrid("getEditor", {
             index: editIndex,
             field: "CompanyId"
         });
         var companyname = $(ed.target).combobox("getText");
         var companyid = $(ed.target).combobox("getValue");

         $dg.datagrid("getRows")[editIndex]["CompanyName"] = companyname;
         $dg.datagrid("getRows")[editIndex]["CompanyId"] = companyid;


         $dg.datagrid("endEdit", editIndex);
         editIndex = undefined;


         return true;
     } else {
         return false;
     }
 }

 function onClickCell(index, field) {
     var _operates = ["_operate1", "_operate2", "_operate3", "ck"]
     if ($.inArray(field, _operates) >= 0) {
         return;
     }
     if (editIndex != index) {
         if (endEditing()) {
             $dg.datagrid("selectRow", index)
                 .datagrid("beginEdit", index);
             editIndex = index;
             var ed = $dg.datagrid("getEditor", {
                 index: index,
                 field: field
             });
             if (ed) {
                 ($(ed.target).data("textbox") ? $(ed.target).textbox("textbox") : $(ed.target)).focus();
             }

         } else {
             $dg.datagrid("selectRow", editIndex);
         }
     }
 }

 function append() {
     if (endEditing()) {
         //$dg.datagrid("appendRow", { Status: 0 });
         //editIndex = $dg.datagrid("getRows").length - 1;
         $dg.datagrid("insertRow", {
             index: 0,
             row: {}
         });
         editIndex = 0;
         $dg.datagrid("selectRow", editIndex)
             .datagrid("beginEdit", editIndex);
     }
 }

 function removeit() {
     if (editIndex == undefined) {
         return
     }
     $dg.datagrid("cancelEdit", editIndex)
         .datagrid("deleteRow", editIndex);
     editIndex = undefined;
 }

 function accept() {
     if (endEditing()) {
         if ($dg.datagrid("getChanges").length) {
             var inserted = $dg.datagrid("getChanges", "inserted");
             var deleted = $dg.datagrid("getChanges", "deleted");
             var updated = $dg.datagrid("getChanges", "updated");
             var effectRow = new Object();
             if (inserted.length) {
                 effectRow.inserted = inserted;
             }
             if (deleted.length) {
                 effectRow.deleted = deleted;
             }
             if (updated.length) {
                 effectRow.updated = updated;
             }
             //console.log(JSON.stringify(effectRow));
             $.post("/Vehicles/SaveData", effectRow, function(response) {
                 //console.log(response);
                 if (response.Success) {
                     $.messager.alert("提示", "提交成功！");
                     $dg.datagrid("acceptChanges");
                     $dg.datagrid("reload");
                 }
             }, "json").fail(function(response) {
                 //console.log(response);
                 $.messager.alert("错误", "提交错误了！", "error");
                 //$dg.datagrid("reload");
             });

         }

         //$dg.datagrid("acceptChanges");
     }
 }

 function reject() {
     $dg.datagrid("rejectChanges");
     editIndex = undefined;
 }

 function getChanges() {
     var rows = $dg.datagrid("getChanges");
     alert(rows.length + " rows are changed!");
 }

 //datagrid 开启筛选功能
 $(function() {

     $dg.datagrid("enableFilter", [{
             field: "Status",
             type: "combobox",
             options: {
                 panelHeight: "auto",
                 data: [{
                     value: "",
                     text: "All"
                 }, {
                     value: 0,
                     text: "启用"
                 }, {
                     value: 1,
                     text: "禁用"
                 }],
                 onChange: function(value) {
                     if (value == "") {
                         $dg.datagrid("removeFilterRule", "Status");
                     } else {
                         $dg.datagrid("addFilterRule", {
                             field: "Status",
                             op: "equal",
                             value: value
                         });
                     }
                     $dg.datagrid("doFilter");
                 }
             }
         },

         {
             field: "Id",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "Axles",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "StrLoadWeight",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "LoadWeight",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "LoadVolume",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "CarriageSize",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "VehLongSize",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "AVGECON",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "AVGECONScale",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "RoadKM",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "RoadHours",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "RoadKMScale",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "RPM",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "PurchasedAmount",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "VehLong",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "VehWide",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "VehHigh",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "ServiceLife",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "MaintainKM",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "MaintainMonth",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "VehTailBoardLife",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "VehTailBoardAmount",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "DrLicenseRatedUsers",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "DrLicenseVehWeight",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "DrLicenseDevWeight",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "DrLicenseNetWeight",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "DrLicenseNetVolume",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "DrLicenseVehWide",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "DrLicenseVehHigh",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "DrLicenseVehLong",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "InsTrafficPolicyAmount",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "InsThirdPartyAmount",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },
         {
             field: "InsThirdPartyLogisticsAmount",
             type: "numberbox",
             op: ['equal', 'notequal', 'less', 'lessorequal', 'greater', 'greaterorequal']
         },


         {
             field: "UsingDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "UsingDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },
         {
             field: "PurchasedDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "PurchasedDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },
         {
             field: "MaintainDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "MaintainDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },
         {
             field: "DrLicenseRegistrationDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "DrLicenseRegistrationDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },
         {
             field: "DrLicensePubDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "DrLicensePubDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },
         {
             field: "DrLicenseScrapedDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "DrLicenseScrapedDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },
         {
             field: "LoLicensePubDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "LoLicensePubDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },
         {
             field: "LoLicenseValidDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "LoLicenseValidDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },
         {
             field: "LoLicenseCheckDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "LoLicenseCheckDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },
         {
             field: "InsThirdPartyVaildateDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "InsThirdPartyVaildateDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },
         {
             field: "InsThirdPartyLogisticsVaildateDate",
             type: "dateRange",
             options: {
                 onChange: function(value) {
                     $dg.datagrid("addFilterRule", {
                         field: "InsThirdPartyLogisticsVaildateDate",
                         op: "between",
                         value: value
                     });

                     $dg.datagrid("doFilter");
                 }
             }
         },

         {
             field: "CompanyId",
             type: "combobox",
             options: {
                 valueField: "Id",
                 textField: "Name",
                 method: "get",
                 url: "/Vehicles/GetCompanies",
                 onChange: function(value) {
                     if (value == "") {
                         $dg.datagrid("removeFilterRule", "CompanyId");
                     } else {
                         $dg.datagrid("addFilterRule", {
                             field: "CompanyId",
                             op: "equal",
                             value: value
                         });
                     }
                     $dg.datagrid("doFilter");
                 }
             }
         },

     ]);
 })
 //-----------------------------------------------------
 //datagrid onSelect
 //-----------------------------------------------------
 function showdetailsformatter(value, row, index) {

     return '<a onclick="showDetailsWindow(' + row.Id + ')" class="btn btn-default btn-sm" href="javascript:void(0)"><i class="fa fa-list"></i> 查看明细</a>';

 }
 //弹出明细信息
 function showDetailsWindow(id) {
     //console.log(index, row);
     $.getJSON('/Vehicles/PopupEdit/' + id, function(data, status, xhr) {
         //console.log(data);
         $('#detailswindow').window('open');
         loadData(id, data);


     });

 }





    </script>
    <script src="~/Scripts/jquery.filerupload.js"></script>
}


