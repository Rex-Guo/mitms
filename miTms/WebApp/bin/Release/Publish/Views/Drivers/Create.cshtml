@model WebApp.Models.Driver
@{  ViewBag.Title = "司机信息 | Create";}
<!-- MAIN CONTENT -->
<div id="content">
    <!-- quick navigation bar -->
    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-table fa-fw "></i>
                @{ 
                  //TODO:fix quick navigation path
                 }
                路径
                <span>
                    >
                    司机信息
                </span>
            </h1>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
        </div>
    </div>
    <!-- end quick navigation bar -->
    <!-- NEW WIDGET START -->
    <article class="col-sm-12 col-md-12 col-lg-12">
        <!-- Widget ID (each widget will need unique ID)-->
        <div class="jarviswidget" id="wid-id-1" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false">
            <!-- widget options:
            usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
            data-widget-colorbutton="false"
            data-widget-editbutton="false"
            data-widget-togglebutton="false"
            data-widget-deletebutton="false"
            data-widget-fullscreenbutton="false"
            data-widget-custombutton="false"
            data-widget-collapsed="true"
            data-widget-sortable="false"
            -->
            <header>
                <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                <h2> 司机信息 </h2>
            </header>
            <!-- widget div-->
            <div>
                <!-- widget edit box -->
                <div class="jarviswidget-editbox">
                    <!-- This area used as dropdown edit box -->
                </div>
                <!-- end widget edit box -->
                <!-- widget content -->
                <div class="widget-body no-padding">
                       <form id="driver_form" class="smart-form" method="post" novalidate >
                            @Html.AntiForgeryToken()
                            <header>
                                <div class="btn-group">
                                <button type="button" class="btn btn-default" onclick="saveitem()">
                                    <i class="fa fa-floppy-o"></i>
                                    保存
                                </button>
                                <button type="button" class="btn btn-default">
                                    <i class="fa fa-pencil-square-o"></i>
                                    操作1
                                </button>
                                <button type="button" class="btn btn-default">
                                    <i class="fa fa-pencil-square-o"></i>
                                    操作2
                                </button>
                                <button type="button" class="btn btn-default" onclick="exportexcel()">
                                    <i class="fa fa-file-excel-o"></i>
                                    导出Excel
                                </button>
                                <button type="button" class="btn btn-default" onclick="printitem()">
                                    <i class="fa fa-print"></i>
                                    打印
                                </button>
                                <button type="button" class="btn btn-default" onclick="cancelitem()">
                                    <i class="fa fa-refresh"></i>
                                    取消
                                </button>
                                <button type="button" class="btn btn-default" onclick="refreshitem()">
                                    <i class="fa fa-refresh"></i>
                                    刷新
                                </button>
                            </div>
                               </header>
                               @Html.Partial("EditForm")
                            <footer>
                            <button type="submit" class="btn btn-primary">
                                保存
                            </button>
                            <button type="reset" class="btn btn-default">
                                取消
                            </button>
                        </footer>
                        </form>		 
                 </div>
                 <!-- end widget content -->
                 </div>
            <!-- end widget div -->
        </div>
        <!-- end widget -->
    </article>
    <!-- WIDGET END -->
</div>
<!-- END MAIN CONTENT -->
@section Scripts {
     <script type="text/javascript">
	    
        var $editform = $('#driver_form');
        //save item
        function saveitem() {
			  if ($editform.valid()) {
                 var driver = $editform.serializeJSON();
				  
                 var token = $('input[name="__RequestVerificationToken"]', $editform).val();
                 $.ajax({
                    type: "POST",
                    url: "/Drivers/Create",
                    data: {
                        __RequestVerificationToken: token,
                        driver:driver
                    },
                    dataType: 'json',
                    contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                })
                .done(function (response) {
                    if (response.success) {
                        $.messager.alert("提示", "保存成功！");
                    } else {
                        $.messager.alert("错误", "保存失败！" + response.err, "error");
                    }
                    })
                .fail(function (response) {
                        $.messager.alert("错误", "保存失败！", "error");
                    });
                  
             }						
        }
        function cancelitem() {
        }
         function printitem() {
        }
        function exportexcel() {
        }
        function refreshitem() {
        }

     /********************************
     *
     * pageSetUp() is needed whenever you load a page.
     * It initializes and checks for all basic elements of the page
     * and makes rendering easier.
     *
     */
     pageSetUp();
     /********************************
     *
     * pagefunction() $editform 校验规则
     *
     */
     var pagefunction = function () {
            var errorClass = 'invalid';
            var errorElement = 'em';
            $editform.validate({
                 errorClass: errorClass,
                 errorElement: errorElement,
                 highlight: function (element) {
                    $(element).parent().removeClass('state-success').addClass("state-error");
                    $(element).removeClass('valid');
                 },
                 unhighlight: function (element) {
                    $(element).parent().removeClass("state-error").addClass('state-success');
                    $(element).addClass('valid');
                 },
                // Rules for form validation
                rules: {
                                    Id:{
                            required:true,
                                                        digits: true,
                                                                                                        },
                                    Name:{
                            required:false,
                                                                                    rangelength: [0, 30],
                                                                            },
                                    Gender:{
                            required:true,
                                                        digits: true,
                                                                                                        },
                                    IdentityDocumentNumber:{
                            required:false,
                                                                                    rangelength: [0, 18],
                                                                            },
                                    MobileTelephoneNumber:{
                            required:false,
                                                                                    rangelength: [0, 18],
                                                                            },
                                    TelephoneNumber:{
                            required:false,
                                                                                    rangelength: [0, 18],
                                                                            },
                                    QualificationCertificateNumber:{
                            required:false,
                                                                                    rangelength: [0, 19],
                                                                            },
                                    Remark:{
                            required:false,
                                                                                    rangelength: [0, 512],
                                                                            },
                                    Carrierid:{
                            required:true,
                                                        digits: true,
                                                                                                        },
                                    RegistrationDatetime:{
                            required:true,
                                                                                                                date: true,
                                                },
                                    UpdateTimeDatetime:{
                            required:false,
                                                                                                                date: true,
                                                },
                                    IsBlaclkList:{
                            required:false,
                                                                                                        },
                                    IsDeleteFlag:{
                            required:false,
                                                                                                        },
                                    SynchronizationTime:{
                            required:false,
                                                                                                                date: true,
                                                },
                                    IsException:{
                            required:false,
                                                                                                        },
                                    CompanyId:{
                            required:true,
                                                        digits: true,
                                                                                                        },
                                    CreatedDate:{
                            required:false,
                                                                                                                date: true,
                                                },
                                    CreatedBy:{
                            required:false,
                                                                                    rangelength: [0, 20],
                                                                            },
                                    LastModifiedDate:{
                            required:false,
                                                                                                                date: true,
                                                },
                                    LastModifiedBy:{
                            required:false,
                                                                                    rangelength: [0, 20],
                                                                            },
                                },
                submitHandler: function (form) {
                    //调用保存方法
                      saveitem();
                      return false;
                    //$(form).ajaxSubmit({
                    //    success: function () {
                    //        console.log('ajaxSubmit success');
                    //   }
                    //});
                },
                // Do not change code below
                errorPlacement: function (error, element) {
                    error.insertAfter(element.parent());
                }

            });
        }
        pagefunction();
 </script>
}
