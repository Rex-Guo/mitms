﻿@model WebApp.Models.Category
 <!-- 输出form表单界面 -->
 <div id="detailswindow" hidden="hidden" class="easyui-window" 
      title="明细数据" 
      data-options="modal:true,
                    closed:true,
                    iconcls:'icon-menu',
                    onOpen:resize" style="width:960px;height:520px">
    <form id="category_form" class="smart-form easyui-form" method="post" data-options="novalidate:true">
 <table class="table table-bordered">
     <caption>
         <!--form toolbar-->
                <div id="form_toolbar" style="height:auto" class="datagrid-toolbar">
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-floppy-o',plain:true" onclick="saveitem()">保存</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-undo',plain:true" onclick="cancelitem()">取消</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-refresh',plain:true" onclick="refreshitem()">刷新</a>
                </div>
         <!--form toolbar-->
     </caption>
	    <tr>
      	   <td class="control-label">   @Html.DisplayNameFor(model => model.Id)  </td>
	   <td> 
			   			   			<input id="@Html.IdFor(model => model.Id)" 
                   name="@Html.NameFor(model => model.Id)" 
                   value="@Html.ValueFor(model => model.Id)"
                   tabindex="0"   
                   class="easyui-numberbox" type="text" 
                   data-options="prompt:'Id',
                                 readonly:true,
                                width:200,
                                 label:'',required:true ,precision:0" />
			  				   </td>
	   	   <td class="control-label">   @Html.DisplayNameFor(model => model.Name)  </td>
	   <td> 
			   			  			<input id="@Html.IdFor(model => model.Name)" 
				   name="@Html.NameFor(model => model.Name)" 
				   value="@Html.ValueFor(model => model.Name)"
				   tabindex="1" 
				   class="easyui-textbox" 
				   type="text" 
				   data-options="prompt:'产品目录',
								 label:'',
                                width:200,
								 required:true ,validType:'length[0,30]'" />
			  				   </td>
	   	   </tr>
	   	    <tr>
      	   <td class="control-label">   @Html.DisplayNameFor(model => model.CreatedDate)  </td>
	   <td> 
			   			  			<input id="@Html.IdFor(model => model.CreatedDate)" 
			       name="@Html.NameFor(model => model.CreatedDate)" 
				   tabindex="2" 
				   class="easyui-datebox" 
				   type="text" 
				   value="@Html.ValueFor(model => model.CreatedDate)"
				   data-options="prompt:'创建时间',
								 label:'',
                                width:200,
								 required:false,
								 formatter:dateformatter" />
			  				   </td>
	   	   <td class="control-label">   @Html.DisplayNameFor(model => model.CreatedBy)  </td>
	   <td> 
			   			  			<input id="@Html.IdFor(model => model.CreatedBy)" 
				   name="@Html.NameFor(model => model.CreatedBy)" 
				   value="@Html.ValueFor(model => model.CreatedBy)"
				   tabindex="3" 
				   class="easyui-textbox" 
				   type="text" 
				   data-options="prompt:'创建用户',
								 label:'',
                                width:200,
								 required:false ,validType:'length[0,20]'" />
			  				   </td>
	   	   </tr>
	   	    <tr>
      	   <td class="control-label">   @Html.DisplayNameFor(model => model.LastModifiedDate)  </td>
	   <td> 
			   			  			<input id="@Html.IdFor(model => model.LastModifiedDate)" 
			       name="@Html.NameFor(model => model.LastModifiedDate)" 
				   tabindex="4" 
				   class="easyui-datebox" 
				   type="text" 
				   value="@Html.ValueFor(model => model.LastModifiedDate)"
				   data-options="prompt:'最后更新时间',
								 label:'',
                                width:200,
								 required:false,
								 formatter:dateformatter" />
			  				   </td>
	   	   <td class="control-label">   @Html.DisplayNameFor(model => model.LastModifiedBy)  </td>
	   <td> 
			   			  			<input id="@Html.IdFor(model => model.LastModifiedBy)" 
				   name="@Html.NameFor(model => model.LastModifiedBy)" 
				   value="@Html.ValueFor(model => model.LastModifiedBy)"
				   tabindex="5" 
				   class="easyui-textbox" 
				   type="text" 
				   data-options="prompt:'最后更新用户',
								 label:'',
                                width:200,
								 required:false ,validType:'length[0,20]'" />
			  				   </td>
	   	   </tr>
	   	        <tfoot>
        <tr>
        <tr>
    </tfoot>
</table>
</form>

<!--输出form表单界面-->
<!--========================================================================================-->
     <!-- details tabs -->
    <div class="tabs-container">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs bordered">
								<li class="active"><a data-toggle="tab" href="#tab-products"> Products</a></li>
				   
		 </ul>
		 <!-- Tab panes -->
         <div class="tab-content padding-10">
		  		  <div id="tab-products" class="tab-pane active">
            <div class="panel-body">
                <div class="table-responsive">
				<table id="products_datagrid" class="easyui-datagrid" 
                       style="width:auto;height:300px"
                       data-options="
                            rownumbers:true,
                            iconCls: 'fa fa-list',
                            remoteFilter: false,
                            singleSelect: true,
                            toolbar: '#products_toolbar',
                            method: 'get',
                            onClickCell: products_onClickCell,
                            pagination: 'true'
                    " >
                    <thead>
                        <tr>
						@*<th data-options="field:'ck',checkbox:true"></th>*@
				        														@*<th data-options="field:'Id',width:80"> Id </th>*@
																																<th data-options="field:'Name',width:140,editor:{type:'textbox',options:{required:true ,validType:'length[0,30]'} } "> 名称</th>
																																							<th data-options="field:'Unit',width:140,editor:{type:'textbox',options:{required:false ,validType:'length[0,10]'} } "> 单位</th>
																																								<th data-options="field:'UnitPrice',width:100,align:'right',editor:{type:'numberbox',options:{required:true ,precision:2} } ,sortable:true,resizable:true ">单价</th>
																																								<th data-options="field:'StockQty',width:100,align:'right',editor:{type:'numberbox',options:{required:true ,precision:0} } ,sortable:true,resizable:true ">库存</th>
																																							<th data-options="field:'ConfirmDateTime',width:160,align:'right',editor:{type:'datebox',options:{required:true}} ,formatter:dateformatter"> 确认日期</th>
																																							<th data-options="field:'IsRequiredQc',width:120,editor: {type:'combobox'
                                                ,options:{
                                                panelHeight: 'auto',
                                                data: [ { value: 'true', text: 'true' },{ value: 'false', text: 'false' }],
                                                required:true}}">是否需要QC</th>
																													                        </tr>
                    </thead>
                </table>
				<div id="products_toolbar" style="height:auto">
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-plus',plain:true" onclick="products_createitem()">新增</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-trash-o',plain:true" onclick="products_removeitem()">删除</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-floppy-o',plain:true" onclick="products_saveitem()">保存</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-undo',plain:true" onclick="products_reject()">取消</a>
                </div>
                </div>
            </div>
            </div>
		  	</div>
	</div>
	 
<!--end details tabs -->
</div>


<script type="text/javascript">
    //load data by foreign key
    function loadData(id,data){
         $('#category_form').form('load', data);
                          $productsdg.datagrid('reload', '/Products/GetDataByCategoryId?categoryid='+ id);
                 $productsdg.datagrid('resize');

             }
    //save item
    function saveitem() {
        if ($('#category_form').form('enableValidation').form('validate')) {
            var item = $('#category_form').serializeJSON();

            $.post("/Categories/Edit", item, function (response) {
                //console.log(response);						
                if (response.success) {
                    $.messager.alert("提示", "保存成功！");
                    $('#detailswindow').window('close');

                } else {
                    $.messager.alert("错误", "保存失败！" + response.err, "error");
                }
            }, "json").fail(function (response) {
                //console.log(response);						
                $.messager.alert("错误", "保存失败！", "error");
                //$dg.datagrid("reload");						
            });
        }
    }
    // cancel
    function cancelitem() {
        $('#detailswindow').window('close');
    }
    // reload
    function refreshitem() {
        $('#detailswindow').window('close');
    }
    //easyui window resize function
    function resize() {
         
    }


             //-----------------------------------------------------------------------
		 // details datagrid functions
		 //-----------------------------------------------------------------------
			function filterByCategoryId(categoryid) {
			var value = categoryid;

			   			   $productsdg.datagrid("removeFilterRule", "CategoryId");
			   $productsdg.datagrid("addFilterRule", {
					field: "CategoryId",
					op: "equal",
					value: value
				});
			   $productsdg.datagrid("doFilter");
			   
		}
		 
								//--------------------------------------------------------------------
				// #products_datagrid functions
				//--------------------------------------------------------------------
				var $productsdg = $("#products_datagrid");

				var products_editIndex = undefined;
		function products_reload() {
				$productsdg.datagrid("reload");
			}
	function products_endEditing() {
		if ( products_editIndex == undefined) { return true }
		if ($productsdg.datagrid("validateRow", products_editIndex)) {
						$productsdg.datagrid("endEdit", products_editIndex);
			products_editIndex = undefined;


			return true;
		} else {
			return false;
		}
	}
	function products_onClickCell(index, field) {
		if (products_editIndex != index) {
			if (products_endEditing()) {
				$productsdg.datagrid("selectRow", index)
						.datagrid("beginEdit", index);
                products_editIndex  = index;
				var ed = $productsdg.datagrid("getEditor", { index: index, field: field });
				if (ed) {
					($(ed.target).data("textbox") ? $(ed.target).textbox("textbox") : $(ed.target)).focus();
				}
				
			} else {
				$productsdg.datagrid("selectRow", products_editIndex);
			}
		}
	}
	function products_createitem() {
		if (products_endEditing()) {
			 var category = $dg.datagrid("getSelected");

			$productsdg.datagrid("appendRow", { CategoryId:category.Id   });
			productseditIndex = $productsdg.datagrid("getRows").length - 1;
			$productsdg.datagrid("selectRow", products_editIndex )
					.datagrid("beginEdit", products_editIndex);
		}
	}
	function products_removeitem() {
		if (products_editIndex  == undefined) { return }
		$productsdg.datagrid("cancelEdit", products_editIndex )
				.datagrid("deleteRow", products_editIndex );
		productseditIndex = undefined;
	}
   
	function products_reject() {
		$productsdg.datagrid("rejectChanges");
		products_editIndex  = undefined;
	}
	function products_getChanges() {
		var rows = $productsdg.datagrid("getChanges");
		alert(rows.length + " rows are changed!");
	}
	function products_saveitem() {
			if (products_endEditing()) {
				if ($productsdg.datagrid("getChanges").length) {
					var inserted = $productsdg.datagrid("getChanges", "inserted");
					var deleted = $productsdg.datagrid("getChanges", "deleted");
					var updated = $productsdg.datagrid("getChanges", "updated");
					var effectRow = new Object();
					if (inserted.length) {
						effectRow.inserted = inserted;
					}
					if (deleted.length) {
						effectRow.deleted = deleted;
					}
					if (updated.length) {
						effectRow.updated = updated;
					}
					//console.log(JSON.stringify(effectRow));
					$.post("/Products/SaveData", effectRow, function (response) {
						//console.log(response);
						if (response.Success) {
							$.messager.alert("提示", "提交成功！");
							$productsdg.datagrid("acceptChanges");
							$productsdg.datagrid("reload");
						}
					}, "json").fail(function (response) {
						//console.log(response);
						$.messager.alert("错误", "提交错误了！","error");
					  
					});
			  
				}

				//$productsdg.datagrid("acceptChanges");
			}
		}

		$(function () {

			$productsdg.datagrid("enableFilter", [
									]);

			//filterByCategoryId(-1);
		})




				
		 

</script>


